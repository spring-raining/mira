import { Flex } from '@chakra-ui/react';
import { GetServerSideProps } from 'next';
import Head from 'next/head';
import { useEffect, useCallback } from 'react';
import { container } from 'tsyringe';
import { FileTreeView } from '../components/FileTreeView';
import { UniverseView } from '../components/UniverseView';
import { useMiraFiles } from '../hooks/workspace';
import {
  fileSystemServiceToken,
  FileSystemService,
} from '../services/filesystem/fileSystem.trait';
import {
  workspaceServiceToken,
  WorkspaceService,
  WorkspaceRepository,
} from '../services/workspace/workspace.trait';
import { DevServerEvent } from '../types/devServer';
import { MiraMdxFileItem } from '../types/workspace';

interface PageProps {
  mira: MiraMdxFileItem<number>[];
  constants: WorkspaceRepository['constants'];
}

export const getServerSideProps: GetServerSideProps<PageProps> = async () => {
  const cli = container.resolve<WorkspaceService>(workspaceServiceToken);
  const mira = await cli.service.getMiraFiles();
  return {
    props: { mira, constants: cli.service.constants },
  };
};

export default function Home({ mira, constants }: PageProps) {
  const { setMiraFiles } = useMiraFiles();
  useEffect(() => {
    console.log(mira);
    setMiraFiles(
      mira.map((it) => ({
        ...it,
        mtime: new Date(it.mtime),
        birthtime: new Date(it.mtime),
      }))
    );
  }, []);

  useEffect(() => {
    const fn = (event: CustomEvent<DevServerEvent>) => {
      console.log(event.detail);
      if (event.detail.type === 'watcher') {
        // TODO
      }
    };
    window.addEventListener(
      constants.devServerWatcherUpdateEventName,
      fn as EventListener
    );
    return () =>
      window.removeEventListener(
        constants.devServerWatcherUpdateEventName,
        fn as EventListener
      );
  }, []);

  const test = useCallback(async () => {
    const { service } = container.resolve<FileSystemService>(
      fileSystemServiceToken
    );
    const msg = await service.getFile({
      path: ['01.mdx'],
    });
    console.log('>>>>', msg);
  }, [constants]);

  const fileAccess = useCallback(async () => {
    const handler = await window.showDirectoryPicker();
    for await (let key of handler) {
      console.log(key);
    }
    const pkg = await handler.getFileHandle('package.json');
    console.log(pkg);
  }, []);

  return (
    <>
      <Head>
        <title>Mira</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <script type="module" src={constants.devServerWatcherImportPath} />
      </Head>

      <Flex alignItems="stretch" height="100vh">
        <Flex
          as="aside"
          flexBasis={40}
          overflow="auto"
          flexDir="column"
          alignItems="stretch"
        >
          <button onClick={test}>Test</button>
          <button onClick={fileAccess}>fileAccess</button>
          <FileTreeView />
        </Flex>
        <Flex
          as="main"
          flex={1}
          overflow="auto"
          flexDir="column"
          alignItems="stretch"
        >
          <UniverseView {...{ constants }} />
        </Flex>
      </Flex>
    </>
  );
}
