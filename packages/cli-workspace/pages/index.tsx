import { theme } from '@asteroid-mdx/wui';
import { ChakraProvider, Flex } from '@chakra-ui/react';
import { GetServerSideProps } from 'next';
import Head from 'next/head';
import { useEffect } from 'react';
import { container } from 'tsyringe';
import { FileTreeView } from '../components/FileTreeView';
import { UniverseView } from '../components/UniverseView';
import { useAsteroidFiles } from '../hooks/workspace';
import {
  workspaceServiceToken,
  WorkspaceService,
  WorkspaceRepository,
} from '../services/workspace';
import { AsteroidMdxFileItem, DevServerEvent } from '../types/workspace';

interface PageProps {
  asteroid: AsteroidMdxFileItem<number>[];
  constants: WorkspaceRepository['constants'];
}

export const getServerSideProps: GetServerSideProps<PageProps> = async () => {
  const cli = container.resolve<WorkspaceService>(workspaceServiceToken);
  const asteroid = await cli.service.getAsteroidFiles();
  return {
    props: { asteroid, constants: cli.service.constants },
  };
};

export default function Home({ asteroid, constants }: PageProps) {
  const { setAsteroidFiles } = useAsteroidFiles();
  useEffect(() => {
    console.log(asteroid);
    setAsteroidFiles(
      asteroid.map((it) => ({
        ...it,
        mtime: new Date(it.mtime),
        birthtime: new Date(it.mtime),
      }))
    );
  }, []);

  useEffect(() => {
    const fn = (event: CustomEvent<DevServerEvent>) => {
      if (event.detail.type === 'watcher') {
        // TODO
      }
    };
    window.addEventListener(
      constants.devServerWatcherUpdateEventName,
      fn as EventListener
    );
    return () =>
      window.removeEventListener(
        constants.devServerWatcherUpdateEventName,
        fn as EventListener
      );
  }, []);

  return (
    <ChakraProvider {...{ theme }}>
      <Head>
        <title>Asteroid</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <script type="module" src={constants.devServerWatcherImportPath} />
      </Head>

      <Flex alignItems="stretch" height="100vh">
        <Flex
          as="aside"
          flexBasis={40}
          overflow="auto"
          flexDir="column"
          alignItems="stretch"
        >
          <FileTreeView />
        </Flex>
        <Flex
          as="main"
          flex={1}
          overflow="auto"
          flexDir="column"
          alignItems="stretch"
        >
          <UniverseView />
        </Flex>
      </Flex>
    </ChakraProvider>
  );
}
